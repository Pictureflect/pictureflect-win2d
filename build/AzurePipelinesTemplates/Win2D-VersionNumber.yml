parameters:
  PipelineType: "not set"

steps:
- task: powershell@2
  name: Win2dVersionTask
  inputs:
    targetType: inline
    # Version numbers look like this: 
    # [CI]       Win2D.uwp.1.27.0-CI-221220.1
    # [Release]  Win2D.uwp.1.27.0
    #
    # Prereleases look like:
    # [CI]       Win2D.uwp.1.27.0-prerelease-CI-221220.1
    # [Release]  Win2D.uwp.1.27.0-prerelease
    #
    # Pipeline name will be just the version number (e.g. 1.27.0-CI-221220.1)
    script: |
      Write-Host "Setting versions for CI/Release pipelines"

      Write-Host Pipeline type: ${{ parameters.PipelineType }}
      Write-Host Package Suffix: $env:packageSuffix

      Write-Host Reading from VERSION file
      $versionMMP = Get-Content build\nuget\VERSION
      $preRelease = Get-Content build\nuget\VERSION-PRERELEASE

      # If the package has a prelease version, add it to the version
      if ( -not [String]::IsNullOrWhiteSpace($preRelease) )
      {
        $versionMMP = $versionMMP + "-" + $preRelease
      }

      # If the pipeline has a suffix, add it to the name
      $pipelineName = "Win2D.UWP." + $versionMMP 
      if ( -not [String]::IsNullOrWhiteSpace($env:packageSuffix) )
      {
        $pipelineName = $pipelineName + "-" + $env:packageSuffix
      }
      
      Write-Host Setting pipeline name to: $pipelineName
      Write-Host "##vso[task.setvariable variable=CUSTOM_VERSION;]$pipelineName"

      Write-Host Done.
  displayName: Set Win2D Version number and Pipeline number

# Use OneBranch Version task to set version
- task: onebranch.pipeline.version@1
  inputs:
    system: 'Custom'
    customVersion: '$(CUSTOM_VERSION)'